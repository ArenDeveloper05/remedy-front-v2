@import './mixins';


/* Colors (Sass vars rather than CSS vars in order to be able to use them inside Sass functions) */
$remedy-Global--color-white: #FFFFFF;
$remedy-Global--color-gray: #808080;
$remedy-Global--color-dark-1: #2C2C2C;
$remedy-Global--color-dark-2: #1F1F1F;
$remedy-Global--color-dark-3: #181818;
$remedy-Global--color-green: #6AFFAF;


:root {

  /* Fonts */
  --remedy-Global--font-text: 'PP Neue Montreal', system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;
  --remedy-Global--font-header: 'PP Telegraf', system-ui, -apple-system, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif;


  /*
    Responsive font size (also @see src/styles/bootstrap-customization.scss)
  */
  --remedy-Global--font-size: 10px; // 0-1200px

  @include remedy-media-query(lg, Infinity) { // 992px-1200px
    --remedy-Global--font-size: 10px;
  }

  @include remedy-media-query(xl, Infinity) { // 1200-1400px
    --remedy-Global--font-size: 10px;
  }

  @include remedy-media-query(xxl, Infinity) { // 1400-1900px
    /**
      Why --remedy-Global--font-size is 10px?
        Because that way it's easy to use rem units.
        Rem units are relative to the :root font-size
        Example: 20px = 2rem, 16px = 1.6rem

      Why 10px is specifically on the 1400-1900px range?
        Because the design is made for the 1400px width, therefore it's easy:
        1. to take sizes from the design to convert to rem units.
        2. then downsize/upsize --remedy-Global--font-size for other resolutions and see how it looks on smaller/bigger screens.
     */
    --remedy-Global--font-size: 10px;
  }

  @include remedy-media-query(xxxl, Infinity) { // 1900px+
    --remedy-Global--font-size: 10px;
  }


  /*  Block sizes */
  --remedy-Global--UserHeader-height: 7rem;
  --remedy-Global--UserSidebarNav-width: 24rem;
  --remedy-Global--UserContainer-max-width: 1400px;

  /* Dynamically updated in JavaScript */
  --remedy-Global--scrollbar-width: 15px; // Dynamically updated in src/components/App/App.jsx â†’ setGlobalCSSVariablesAndHelperClasses()
}
